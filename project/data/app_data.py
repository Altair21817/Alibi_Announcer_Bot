from dotenv import load_dotenv
import os
from telegram import InlineKeyboardButton, ReplyKeyboardMarkup

load_dotenv()

"""Env data."""

TEAM_CAPITAN_PROP: str = os.getenv('TEAM_CAPITAN_PROP')
TEAM_NAME: str = os.getenv('TEAM_NAME')
TELEGRAM_BOT_TOKEN: str = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_TEAM_CHAT: str = os.getenv('TELEGRAM_TEAM_CHAT')
TELEGRAM_USER: str = os.getenv('TELEGRAM_USER')
VK_TOKEN_ADMIN: str = os.getenv('VK_TOKEN_ADMIN')
VK_USER: str = os.getenv('VK_USER')

"""App settings."""

API_TELEGRAM_UPDATE_SEC: int = 1
API_VK_UPDATE_SEC: int = 60

LAST_API_ERR_DEL_SEC: int = 60 * 60

REPLY_FATHER_BUTTONS: list[list[str]] = [['/forward', '/forward_abort']]
REPLY_FATHER_MARKUP: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
    REPLY_FATHER_BUTTONS, resize_keyboard=True)
REPLY_TO_FORWARD_TEXT: str = '–Ø –≥–æ—Ç–æ–≤, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å?'
REPLY_TO_FORWARD_ABORT_TEXT: str = '–•–æ—Ä–æ—à–æ, –Ω–∏—á–µ–≥–æ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–µ—Ä–µ—à–ª—é!'

# If true bot will send only posts in white list below
SKIP_IF_NOT_IMPORTANT: bool = False
SKIP_WHITE_LIST: list[str] = [
    'checkin', 'game_results', 'preview',
    'prize_results', 'stop-list', 'teams']

"""Groups main info data."""

ALIBI: str = 'Alibi'
ALIBI_GROUP_ID: int = 40914100
ALIBI_GROUP_LOGO: str = (
    'https://sun9-46.userapi.com/impg/LiT08C2tWC-QeeYRDjHqaHRFyXNOYyhxFacXQA/'
    'JpfUXhL2n2s.jpg?size=674x781&quality=95&sign='
    'e8310f98da4ff095adb5e46ba20eef2d&type=album')
ALIBI_POST_LINK: str = 'https://vk.com/alibigames?w=wall-'
ALIBI_TAG: str = 'üü£ Alibi'
DETECTIT: str = 'Detectit'
DETECTIT_GROUP_ID: int = 219311078
DETECTIT_GROUP_LOGO: str = (
    'https://sun9-40.userapi.com/impg/frYTaWRpxfjOS8eVZayKsugTQILb9MM0uYggNQ/'
    'UhQlYUWdBh0.jpg?size=800x768&quality=95&sign='
    'bb10ce9b1e4f2328a2382faba0981c2c&type=album')
DETECTIT_POST_LINK: str = 'https://vk.com/detectitspb?w=wall-'
DETECTIT_TAG: str = '‚ö´Ô∏è Detectit'

PINNED_POST_ORDER: int = 0
NON_PINNED_POST_ORDER: int = 1

MAX_CAPTION_LENGTH: int = 1024
MAX_LINK_LENGTH: int = 100

"""Data to text parsing."""

EMOJI_SYMBOLS: dict[int, str] = {
    1: '1Ô∏è‚É£',
    2: '2Ô∏è‚É£',
    3: '3Ô∏è‚É£',
    4: '4Ô∏è‚É£',
    5: '5Ô∏è‚É£',
    6: '6Ô∏è‚É£',
    ALIBI: {
        'true': '‚úÖ',
        'false': '‚ùå',
        'skip': 'üö´',
        'pref': ALIBI},
    DETECTIT: {
        'true': '‚ùáÔ∏è',
        'false': '‚≠ïÔ∏è',
        'skip': '‚õîÔ∏è',
        'pref': DETECTIT}}

CALLBACK_DATA_NONE: str = 'None'


def _create_inline_buttons(
        group_name: str
        ) -> dict[int, list[list[InlineKeyboardButton]]]:
    """Create inline keyboard buttons for given group."""
    if group_name == ALIBI:
        but_true, but_false, but_deny, pref = EMOJI_SYMBOLS[ALIBI].values()
    else:
        but_true, but_false, but_deny, pref = EMOJI_SYMBOLS[DETECTIT].values()
    inline_buttons: dict[int, list[list[InlineKeyboardButton]]] = {}
    for game_num in range(1, 7):
        buttons_row: list[list[InlineKeyboardButton]] = []
        buttons: list[InlineKeyboardButton] = []
        for j in range(1, game_num+1):
            if j != 1 and j % 2 == 1:
                buttons_row.append(buttons)
                buttons: list[InlineKeyboardButton] = []
            for action in [[but_true, '+1'], [but_false, '-1']]:
                buttons.append(
                    InlineKeyboardButton(
                        text=f'{EMOJI_SYMBOLS[j]}{action[0]}',
                        callback_data=f'{j} {action[1]} {pref}'))
        if j % 2 == 1:
            buttons += [
                InlineKeyboardButton(
                    text='¬†', callback_data=CALLBACK_DATA_NONE),
                InlineKeyboardButton(
                    text=but_deny, callback_data=f'0 +1 {pref}')]
        else:
            buttons_row.append(buttons)
            buttons: list[InlineKeyboardButton] = [
                InlineKeyboardButton(
                    text='¬†', callback_data=CALLBACK_DATA_NONE),
                InlineKeyboardButton(
                    text='¬†', callback_data=CALLBACK_DATA_NONE),
                InlineKeyboardButton(
                    text='¬†', callback_data=CALLBACK_DATA_NONE),
                InlineKeyboardButton(
                    text=but_deny,
                    callback_data=f'0 +1 {pref}')]
        buttons_row.append(buttons)
        inline_buttons[game_num] = buttons_row
    return inline_buttons


BUTTONS_TEAM_CONFIG_ALIBI: dict[int, list[list[InlineKeyboardButton]]] = (
    _create_inline_buttons(group_name=ALIBI))
BUTTONS_TEAM_CONFIG_DETECTIT: dict[int, list[list[InlineKeyboardButton]]] = (
    _create_inline_buttons(group_name=DETECTIT))

DATE_HEADLIGHT: str = (
    '{number} {date_location}')

LOCATIONS: dict[str, str] = {
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–æ–π':
        '—Ä–µ—Å—Ç–æ—Ä–∞–Ω –¶–∏–Ω—å (16-—è –ª–∏–Ω. B.O., 83)',
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ì–æ—Ä—å–∫–æ–≤—Å–∫–æ–π':
        '—Ä–µ—Å—Ç–æ—Ä–∞–Ω Parkking (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π –ø–∞—Ä–∫, 4)',
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–æ–π':
        '—Ä–µ—Å—Ç–æ—Ä–∞–Ω Unity –Ω–∞ –ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–æ–π (–Ω–∞–±. –ö–∞—Ä–ø–æ–≤–∫–∏, 5–∫17)',
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ü–ª–æ—â–∞–¥–∏ –õ–µ–Ω–∏–Ω–∞':
        '–¶–µ–Ω—Ç—Ä Kod (—É–ª. –ö–æ–º—Å–æ–º–æ–ª–∞, 2)',
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –°–µ–Ω–Ω–æ–π':
        '—Ä–µ—Å—Ç–æ—Ä–∞–Ω Unity –Ω–∞ –°–µ–Ω–Ω–æ–π (–ø–µ—Ä. –ì—Ä–∏–≤—Ü–æ–≤–∞, 4)',
    '—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –ß–µ—Ä–Ω—ã—à–µ–≤—Å–∫–æ–π':
        '–î–≤–æ—Ä–µ—Ü –û–ª–∏–º–ø–∏—è (–õ–∏—Ç–µ–π–Ω—ã–π –ø—Ä., 14)'}

MEDALS: dict[str, list[str]] = {
    '1th': ['#medal #gold_medal'],
    '2th': ['#medal #silver_medal'],
    '3th': ['#medal #bronze_medal'],
    '4th': ['#medal #iron_medal'],
    '5th': ['#medal #wood_medal']}

POST_TOPICS: dict[str, str] = {
    '–ì–æ–Ω–æ—Ä–∞—Ä–î–µ—Ç–µ–∫—Ç–∏–≤–∞': 'rating',
    'tasks': 'tasks',
    'üì∏': 'photos',
    'photos': 'photos',
    'results': 'game_results',
    'preview': 'preview',
    '—Å—Ç–æ–ø_–ª–∏—Å—Ç': 'stop-list',
    'Stop-list': 'stop-list',
    'checkin': 'checkin',
    'teams': 'teams',
    '–ò—Ç–æ–≥–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞': 'prize_results',
    '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞': 'prize_results',
    '–û—Ç–∑—ã–≤ –æ—Ç –∫–æ–º–∞–Ω–¥—ã': 'feedback',
    '—Ñ–æ—Ç–æ': 'photos'}

TEAM_GUEST: str = '(–≥–æ—Å—Ç—å)'

GAME_REMINDER_LOOKUP: str = '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –∑–∞–≤—Ç—Ä–∞'
TEAM_REGISTER_LOOKUP: str = f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã ¬´{TEAM_NAME}¬ª'

TEAM_REGISTER_TEXT: str = (
    '–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —É—á–∞—Å—Ç–∏–µ '
    '–≤ –∏–≥—Ä–µ. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–∞–ø–∏—Ç–∞–Ω—É –∫–æ–º–∞–Ω–¥—ã –ø–æ –Ω–æ–º–µ—Ä—É '
    f'{TEAM_CAPITAN_PROP} –≤ —Ä–∞–∑–º–µ—Ä–µ '
    '{money_amount} —Ä—É–±–ª–µ–π.\n\n'

    '–ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—è–µ—Ç —É—á–∞—Å—Ç–∏–µ –º–µ–Ω–µ–µ, —á–µ–º –∑–∞ —Å—É—Ç–∫–∏, –æ–ø–ª–∞—Ç–∞ '
    '–Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.\n\n'

    '–ï—Å–ª–∏ –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–≥—Ä–æ–∫–∏, –æ–ø–ª–∞—Ç–∏—Ç—å —É—á–∞—Å—Ç–∏–µ '
    '–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ —Ü–µ–Ω–µ:\n'
    '¬∑ 500 ‚ÇΩ —Å —á–µ–ª–æ–≤–µ–∫–∞ ‚Äî –¥–æ –¥–Ω—è –∏–≥—Ä—ã,\n'
    '¬∑ 600 ‚ÇΩ —Å —á–µ–ª–æ–≤–µ–∫–∞ ‚Äî –≤ –¥–µ–Ω—å –∏–≥—Ä—ã.')

"""JSON settings."""

API_ERROR_NAME: str = 'last_api_error.json'

DATA_FOLDER: str = 'project/data/'
SAVED_DATA_JSON_NAME: str = 'saved_data.json'
SAVED_DATA_JSON_DEFAULT: dict[str, int | dict[str, any]] = {
    'last_alibi_game': 'NoData',
    'last_detectit_game': 'NoData',
    'last_vk_message_id_alibi': 0,
    'last_vk_message_id_detectit': 0,
    'last_vk_wall_id_alibi': 0,
    'last_vk_wall_id_detectit': 0,
    'pinned_telegram_message_id_alibi': 0,
    'pinned_telegram_message_id_detectit': 0,
    'pinned_vk_message_id_alibi': 0,
    'pinned_vk_message_id_detectit': 0,
    'team_config_alibi': {},
    'team_config_detectit': {},
    'father_forward': False}

STOP_LIST_ACCEPT: str = (
    f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{TEAM_NAME}' –¥–æ–ø—É—â–µ–Ω–∞ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–∏—é –∏–≥—Ä!")
STOP_LIST_DENY: str = (
    f"‚õîÔ∏è –ö–æ–º–∞–Ω–¥–∞ '{TEAM_NAME}' —É–∂–µ –±—ã–ª–∞ –Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Å–µ—Ä–∏–∏ –∏–≥—Ä!")
